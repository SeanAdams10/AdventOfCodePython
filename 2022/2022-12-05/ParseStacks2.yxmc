<?xml version="1.0"?>
<AlteryxDocument yxmdVer="2022.1">
  <Nodes>
    <Node ToolID="53">
      <GuiSettings Plugin="AlteryxBasePluginsGui.RecordID.RecordID">
        <Position x="150" y="65" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FieldName>RecordID</FieldName>
          <StartValue>1</StartValue>
          <FieldType>Int32</FieldType>
          <FieldSize>6</FieldSize>
          <Position>0</Position>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxRecordID" />
    </Node>
    <Node ToolID="55">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="234" y="65" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField expression="if contains([data],'[') &#xA;	then 'stack'&#xA;elseif contains ([data],'move')&#xA;	then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA;	then 'break'&#xA;else 'colList'&#xA;endif" field="RowType" size="1073741823" type="V_WString" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>RowType = if contains([data],'[') 
	then 'stack'
elseif contains ([data],'move')...</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="56">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="318" y="65" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>=</Operator>
            <Field>RowType</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2022-12-05 08:26:38</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <Operand>ColList</Operand>
              <StartDate>2022-12-05 08:26:38</StartDate>
              <EndDate>2022-12-05 08:26:38</EndDate>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[RowType] = "ColList"</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="57">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="318" y="161" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>=</Operator>
            <Field>RowType</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2022-12-05 08:26:49</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <Operand>moves</Operand>
              <StartDate>2022-12-05 08:26:49</StartDate>
              <EndDate>2022-12-05 08:26:49</EndDate>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[RowType] = "moves"</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="58">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="318" y="257" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>=</Operator>
            <Field>RowType</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2022-12-05 08:26:49</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <Operand>stack</Operand>
              <StartDate>2022-12-05 08:26:49</StartDate>
              <EndDate>2022-12-05 08:26:49</EndDate>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[RowType] = "stack"</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="59">
      <GuiSettings Plugin="AlteryxBasePluginsGui.TextToColumns.TextToColumns">
        <Position x="402" y="65" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Field>data</Field>
          <Delimeters value=" " />
          <NumFields value="1" />
          <Flags value="0" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field description="TextToColumns: Parsed from data" name="data" size="2147483647" source="TextToColumns: Parsed from data" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxTextToColumns" />
    </Node>
    <Node ToolID="61">
      <GuiSettings Plugin="AlteryxBasePluginsGui.RegEx.RegEx">
        <Position x="402" y="161" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Field>data</Field>
          <RegExExpression value="move (\d+) from (\d+) to (\d+)" />
          <CaseInsensitve value="True" />
          <Method>ParseComplex</Method>
          <Replace expression="">
            <CopyUnmatched value="True" />
          </Replace>
          <ParseSimple>
            <SplitToRows value="False" />
            <RootName>data</RootName>
            <NumFields value="3" />
            <ErrorHandling>Warn</ErrorHandling>
          </ParseSimple>
          <ParseComplex>
            <Field field="MoveSteps" type="Int16" size="2" />
            <Field field="From" type="Int16" size="2" />
            <Field field="To" type="Int16" size="2" />
          </ParseComplex>
          <Match>
            <Field>data_Matched</Field>
            <ErrorUnmatched value="False" />
          </Match>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
            <Field description="RegEx: Parsed from data" name="MoveSteps" source="RegEx: Parsed from data" type="Int16" />
            <Field description="RegEx: Parsed from data" name="From" source="RegEx: Parsed from data" type="Int16" />
            <Field description="RegEx: Parsed from data" name="To" source="RegEx: Parsed from data" type="Int16" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxRegEx" />
    </Node>
    <Node ToolID="64">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="486" y="65" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>IsNotEmpty</Operator>
            <Field>data</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2022-12-05 08:33:50</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <Operand>
              </Operand>
              <StartDate>2022-12-05 08:33:50</StartDate>
              <EndDate>2022-12-05 08:33:50</EndDate>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>!IsEmpty([data])</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field description="TextToColumns: Parsed from data" name="data" size="2147483647" source="TextToColumns: Parsed from data" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field description="TextToColumns: Parsed from data" name="data" size="2147483647" source="TextToColumns: Parsed from data" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="66">
      <GuiSettings Plugin="AlteryxBasePluginsGui.CrossTab.CrossTab">
        <Position x="570" y="65" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <GroupFields />
          <HeaderField field="data" />
          <DataField field="RecordID" />
          <Methods>
            <Method method="Sum" />
          </Methods>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="1" source="CrossTab:Header:data:1:Sum:" type="Int64" />
            <Field name="2" source="CrossTab:Header:data:2:Sum:" type="Int64" />
            <Field name="3" source="CrossTab:Header:data:3:Sum:" type="Int64" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxCrossTab" />
    </Node>
    <Node ToolID="68">
      <GuiSettings Plugin="AlteryxBasePluginsGui.RegEx.RegEx">
        <Position x="402" y="257" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Field>data</Field>
          <RegExExpression value="(.{1,4})" />
          <CaseInsensitve value="True" />
          <Method>ParseSimple</Method>
          <Replace expression="">
            <CopyUnmatched value="True" />
          </Replace>
          <ParseSimple>
            <SplitToRows value="True" />
          </ParseSimple>
          <ParseComplex>
            <Field field="RegExOut1" type="V_String" size="2147483647" />
          </ParseComplex>
          <Match>
            <Field>data_Matched</Field>
            <ErrorUnmatched value="False" />
          </Match>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxRegEx" />
    </Node>
    <Node ToolID="70">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Tile.Tile">
        <Position x="594" y="257" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Method>UniqueValue</Method>
          <UniqueValue>
            <UniqueFields>
              <Field field="RecordID" />
            </UniqueFields>
            <DontSort value="True" />
          </UniqueValue>
          <GroupFields orderChanged="False" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
            <Field description="RegEx: Parsed from data" name="Crate" size="1" source="RegEx: Parsed from data" type="String" />
            <Field name="Tile_Num" source="Tile" type="Int32" />
            <Field name="Tile_SequenceNum" source="Tile" type="Int32" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxTile" />
    </Node>
    <Node ToolID="71">
      <GuiSettings Plugin="AlteryxBasePluginsGui.CrossTab.CrossTab">
        <Position x="690" y="257" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <GroupFields />
          <HeaderField field="Tile_SequenceNum" />
          <DataField field="Crate" />
          <Methods>
            <Method method="Concat" />
            <Separator>
            </Separator>
            <FieldSize value="2048" />
          </Methods>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="1" size="2048" source="CrossTab:Header:Tile_SequenceNum:1:Concat:" type="V_String" />
            <Field name="2" size="2048" source="CrossTab:Header:Tile_SequenceNum:2:Concat:" type="V_String" />
            <Field name="3" size="2048" source="CrossTab:Header:Tile_SequenceNum:3:Concat:" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxCrossTab" />
    </Node>
    <Node ToolID="72">
      <GuiSettings Plugin="AlteryxBasePluginsGui.RegEx.RegEx">
        <Position x="498" y="257" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Field>data</Field>
          <RegExExpression value="\[(.*)\]" />
          <CaseInsensitve value="True" />
          <Method>ParseComplex</Method>
          <Replace expression="">
            <CopyUnmatched value="True" />
          </Replace>
          <ParseSimple>
            <SplitToRows value="False" />
            <RootName>data</RootName>
            <NumFields value="3" />
            <ErrorHandling>Warn</ErrorHandling>
          </ParseSimple>
          <ParseComplex>
            <Field field="Crate" type="String" size="1" />
          </ParseComplex>
          <Match>
            <Field>data_Matched</Field>
            <ErrorUnmatched value="False" />
          </Match>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
            <Field description="RegEx: Parsed from data" name="Crate" size="1" source="RegEx: Parsed from data" type="String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxRegEx" />
    </Node>
    <Node ToolID="73">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Union.Union">
        <Position x="846" y="258" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <ByName_ErrorMode>Warning</ByName_ErrorMode>
          <ByName_OutputMode>All</ByName_OutputMode>
          <Mode>ByName</Mode>
          <SetOutputOrder value="False" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="1" size="2048" source="CrossTab: (Multiple Sources)" type="V_String" />
            <Field name="2" size="2048" source="CrossTab: (Multiple Sources)" type="V_String" />
            <Field name="3" size="2048" source="CrossTab: (Multiple Sources)" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxUnion" />
    </Node>
    <Node ToolID="74">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="666" y="65" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Expression>1=0</Expression>
          <Mode>Custom</Mode>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>strip out the rows - I only want columns</AnnotationText>
          <DefaultAnnotationText>1=0</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="1" source="CrossTab:Header:data:1:Sum:" type="Int64" />
            <Field name="2" source="CrossTab:Header:data:2:Sum:" type="Int64" />
            <Field name="3" source="CrossTab:Header:data:3:Sum:" type="Int64" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="1" source="CrossTab:Header:data:1:Sum:" type="Int64" />
            <Field name="2" source="CrossTab:Header:data:2:Sum:" type="Int64" />
            <Field name="3" source="CrossTab:Header:data:3:Sum:" type="Int64" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="78">
      <GuiSettings Plugin="AlteryxBasePluginsGui.RecordID.RecordID">
        <Position x="570" y="162" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FieldName>MoveID</FieldName>
          <StartValue>1</StartValue>
          <FieldType>Int32</FieldType>
          <FieldSize>6</FieldSize>
          <Position>0</Position>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="MoveID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
            <Field name="RowType" size="1073741823" source="Formula: if contains([data],'[') &#xA; then 'stack'&#xA;elseif contains ([data],'move')&#xA; then 'moves'&#xA;elseif trim([data]) = '' or isnull([data])&#xA; then 'break'&#xA;else 'colList'&#xA;endif" type="V_WString" />
            <Field description="RegEx: Parsed from data" name="MoveSteps" source="RegEx: Parsed from data" type="Int16" />
            <Field description="RegEx: Parsed from data" name="From" source="RegEx: Parsed from data" type="Int16" />
            <Field description="RegEx: Parsed from data" name="To" source="RegEx: Parsed from data" type="Int16" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxRecordID" />
    </Node>
    <Node ToolID="79">
      <GuiSettings Plugin="AlteryxGuiToolkit.Questions.Tab.Tab">
        <Position x="0" y="0" width="59" height="59" />
      </GuiSettings>
      <Properties>
        <Configuration />
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
    </Node>
    <Node ToolID="81">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroOutput.MacroOutput">
        <Position x="1134" y="162" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Name>Moves</Name>
          <Abbrev>M</Abbrev>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>M Output</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroOutput" />
    </Node>
    <Node ToolID="82">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroInput.MacroInput">
        <Position x="54" y="54" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <UseFileInput value="False" />
          <Name>Raw Data</Name>
          <Abbrev>R</Abbrev>
          <ShowFieldMap value="True" />
          <Optional value="False" />
          <TextInput>
            <Configuration>
              <NumRows value="9" />
              <Fields>
                <Field name="data" />
              </Fields>
              <Data>
                <r>
                  <c><![CDATA[    [D]    ]]></c>
                </r>
                <r>
                  <c><![CDATA[[N] [C]    ]]></c>
                </r>
                <r>
                  <c>[Z] [M] [P]</c>
                </r>
                <r>
                  <c><![CDATA[ 1   2   3 ]]></c>
                </r>
                <r>
                  <c />
                </r>
                <r>
                  <c>move 1 from 2 to 1</c>
                </r>
                <r>
                  <c>move 3 from 1 to 3</c>
                </r>
                <r>
                  <c>move 2 from 2 to 1</c>
                </r>
                <r>
                  <c>move 1 from 1 to 2</c>
                </r>
              </Data>
            </Configuration>
          </TextInput>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>R Input</DefaultAnnotationText>
          <Left value="True" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="data" size="2147483647" source="TextInput:" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroInput" />
    </Node>
    <Node ToolID="84">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="678" y="162" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="MoveID" selected="True" />
            <SelectField field="MoveSteps" selected="True" type="Int16" forced="True" size="2" />
            <SelectField field="From" selected="True" type="Int16" forced="True" size="2" />
            <SelectField field="To" selected="True" type="Int16" forced="True" size="2" />
            <SelectField field="*Unknown" selected="False" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="MoveID" source="RecordID: Starting Value=1" type="Int32" />
            <Field description="RegEx: Parsed from data" name="MoveSteps" source="RegEx: Parsed from data" type="Int16" />
            <Field description="RegEx: Parsed from data" name="From" source="RegEx: Parsed from data" type="Int16" />
            <Field description="RegEx: Parsed from data" name="To" source="RegEx: Parsed from data" type="Int16" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="85">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Transpose.Transpose">
        <Position x="942" y="258" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <ErrorWarn>Warn</ErrorWarn>
          <KeyFields />
          <DataFields>
            <Field field="1" selected="True" />
            <Field field="2" selected="True" />
            <Field field="3" selected="True" />
            <Field field="*Unknown" selected="True" />
          </DataFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Name" size="1" source="Transpose:" type="String" />
            <Field name="Value" size="2048" source="CrossTab: (Multiple Sources)" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxTranspose" />
    </Node>
    <Node ToolID="86">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="1038" y="258" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="Name" selected="True" rename="StackID" type="Int16" size="2" />
            <SelectField field="Value" selected="True" rename="Stack" />
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="StackID" source="Transpose:" type="Int16" />
            <Field name="Stack" size="2048" source="CrossTab: (Multiple Sources)" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="89">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="1038" y="342" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="1" size="2048" source="CrossTab: (Multiple Sources)" type="V_String" />
            <Field name="2" size="2048" source="CrossTab: (Multiple Sources)" type="V_String" />
            <Field name="3" size="2048" source="CrossTab: (Multiple Sources)" type="V_String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="90">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroOutput.MacroOutput">
        <Position x="1134" y="258" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Name>1st version - rows</Name>
          <Abbrev>1</Abbrev>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>1 Output</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroOutput" />
    </Node>
    <Node ToolID="91">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroOutput.MacroOutput">
        <Position x="1134" y="342" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Name>2nd version - columns</Name>
          <Abbrev>2</Abbrev>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>2 Output</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroOutput" />
    </Node>
  </Nodes>
  <Connections>
    <Connection>
      <Origin ToolID="53" Connection="Output" />
      <Destination ToolID="55" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="55" Connection="Output" />
      <Destination ToolID="56" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="55" Connection="Output" />
      <Destination ToolID="57" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="55" Connection="Output" />
      <Destination ToolID="58" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="56" Connection="True" />
      <Destination ToolID="59" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="57" Connection="True" />
      <Destination ToolID="61" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="58" Connection="True" />
      <Destination ToolID="68" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="59" Connection="Output" />
      <Destination ToolID="64" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="61" Connection="Output" />
      <Destination ToolID="78" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="64" Connection="True" />
      <Destination ToolID="66" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="66" Connection="Output" />
      <Destination ToolID="74" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="68" Connection="Output" />
      <Destination ToolID="72" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="70" Connection="Output" />
      <Destination ToolID="71" Connection="Input" />
    </Connection>
    <Connection name="#1">
      <Origin ToolID="71" Connection="Output" />
      <Destination ToolID="73" Connection="Input" />
    </Connection>
    <Connection name="#2">
      <Origin ToolID="74" Connection="True" />
      <Destination ToolID="73" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="72" Connection="Output" />
      <Destination ToolID="70" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="73" Connection="Output" />
      <Destination ToolID="85" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="73" Connection="Output" />
      <Destination ToolID="89" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="78" Connection="Output" />
      <Destination ToolID="84" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="82" Connection="Output" />
      <Destination ToolID="53" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="84" Connection="Output" />
      <Destination ToolID="81" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="85" Connection="Output" />
      <Destination ToolID="86" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="86" Connection="Output" />
      <Destination ToolID="90" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="89" Connection="Output" />
      <Destination ToolID="91" Connection="Input" />
    </Connection>
  </Connections>
  <Properties>
    <Memory default="True" />
    <GlobalRecordLimit value="0" />
    <TempFiles default="True" />
    <Annotation on="True" includeToolName="False" />
    <ConvErrorLimit value="10" />
    <ConvErrorLimit_Stop value="False" />
    <CancelOnError value="False" />
    <DisableBrowse value="False" />
    <EnablePerformanceProfiling value="False" />
    <RunWithE2 value="True" />
    <PredictiveToolsCodePage value="1252" />
    <DisableAllOutput value="False" />
    <ShowAllMacroMessages value="False" />
    <ShowConnectionStatusIsOn value="True" />
    <ShowConnectionStatusOnlyWhenRunning value="True" />
    <ZoomLevel value="0" />
    <LayoutType>Horizontal</LayoutType>
    <Constants>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Macro Output (90)</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Macro Output (91)</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
    </Constants>
    <MetaInfo>
      <NameIsFileName value="True" />
      <Name>ParseStacks2</Name>
      <Description />
      <RootToolName />
      <ToolVersion />
      <ToolInDb value="False" />
      <CategoryName />
      <SearchTags />
      <Author />
      <Company />
      <Copyright />
      <DescriptionLink actual="" displayed="" />
      <Example>
        <Description />
        <File />
      </Example>
      <WorkflowId value="398a3f0e-6303-4660-bde4-7048247231de" />
      <Telemetry>
        <PreviousWorkflowId value="c5ebebcf-fc55-4ac6-8691-e8267ff2c93d" />
        <OriginWorkflowId value="c5ebebcf-fc55-4ac6-8691-e8267ff2c93d" />
      </Telemetry>
    </MetaInfo>
    <Events>
      <Enabled value="True" />
    </Events>
    <RuntimeProperties>
      <Actions />
      <Questions>
        <Question>
          <Type>Tab</Type>
          <Description>Questions</Description>
          <Name>Tab (79)</Name>
          <ToolId value="79" />
          <Questions>
            <Question>
              <Type>MacroOutput</Type>
              <Description />
              <Name>Macro Output (81)</Name>
              <ToolId value="81" />
            </Question>
            <Question>
              <Type>MacroInput</Type>
              <Description />
              <Name>Macro Input (82)</Name>
              <ToolId value="82" />
            </Question>
            <Question>
              <Type>MacroOutput</Type>
              <Description />
              <Name>Macro Output (90)</Name>
              <ToolId value="90" />
            </Question>
            <Question>
              <Type>MacroOutput</Type>
              <Description />
              <Name>Macro Output (91)</Name>
              <ToolId value="91" />
            </Question>
          </Questions>
        </Question>
      </Questions>
      <ModuleType>Macro</ModuleType>
      <MacroCustomHelp value="False" />
      <MacroDynamicOutputFields value="False" />
      <MacroImage></MacroImage>
      <MacroInputs />
      <MacroOutputs />
      <Wiz_CustomHelp value="False" />
      <Wiz_CustomGraphic value="False" />
      <Wiz_ShowOutput value="True" />
      <Wiz_OpenOutputTools>
        <Tool ToolId="81" Selected="True" />
        <Tool ToolId="82" Selected="True" />
        <Tool ToolId="90" Selected="True" />
        <Tool ToolId="91" Selected="True" />
      </Wiz_OpenOutputTools>
      <Wiz_OutputMessage />
      <Wiz_NoOutputFilesMessage />
      <Wiz_ChainRunWizard />
    </RuntimeProperties>
  </Properties>
</AlteryxDocument>