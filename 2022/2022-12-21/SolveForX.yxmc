<?xml version="1.0"?>
<AlteryxDocument yxmdVer="2022.3">
  <Nodes>
    <Node ToolID="5">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="438" y="54" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField expression="if [IsAlphaOp1] then [Op1]&#xA;else [Op2] endif" field="NewNode" size="1073741823" type="V_WString" />
            <FormulaField expression="null()&#xA;	" field="NewOperator" size="1073741823" type="V_WString" />
            <FormulaField expression="null()" field="NewOp2" size="1073741823" type="V_WString" />
            <FormulaField expression="if [IsAlphaOp1] then [Op2]&#xA;else [Op1] endif" field="NewOp1" size="1073741823" type="V_WString" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>NewNode = if [IsAlphaOp1] then [Op1]
else [Op2] endif
NewOperator = null()
	
New...</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
            <Field name="NewNode" size="1073741823" source="Formula: if [IsAlphaOp1] then [Op1]&#xA;else [Op2] endif" type="V_WString" />
            <Field name="NewOperator" size="1073741823" source="Formula: null()&#xA; " type="V_WString" />
            <Field name="NewOp2" size="1073741823" source="Formula: null()" type="V_WString" />
            <Field name="NewOp1" size="1073741823" source="Formula: if [IsAlphaOp1] then [Op2]&#xA;else [Op1] endif" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="6">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="150" y="54" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="RecordID" selected="True" />
            <SelectField field="Node" selected="True" type="V_String" size="19" />
            <SelectField field="Op1" selected="True" />
            <SelectField field="Operator" selected="True" />
            <SelectField field="Op2" selected="True" />
            <SelectField field="*Unknown" selected="False" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="7">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="246" y="54" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField expression="REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" field="IsAlphaOp1" size="1" type="Bool" />
            <FormulaField expression="REGEX_Match([Op2],'.*([a-zA-Z]).*')" field="IsAlphaOp2" size="1" type="Bool" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>IsAlphaOp1 = REGEX_Match([Op1],'.*([a-zA-Z]).*')

IsAlphaOp2 = REGEX_Match([Op2]...</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="8">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="342" y="54" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>=</Operator>
            <Field>Node</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2023-01-30 06:26:38</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <StartDate>2023-01-30 06:26:38</StartDate>
              <EndDate>2023-01-30 06:26:38</EndDate>
              <Operand>Root</Operand>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[Node] = "Root"</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="9">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="438" y="114" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>IsTrue</Operator>
            <Field>IsAlphaOp1</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2023-01-30 06:26:53</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <Operand>
              </Operand>
              <StartDate>2023-01-30 06:26:53</StartDate>
              <EndDate>2023-01-30 06:26:53</EndDate>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Is Op1 a variable</AnnotationText>
          <DefaultAnnotationText>[IsAlphaOp1] = 1</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="10">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="534" y="114" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField expression="[Op1]" field="NewNode" size="1073741823" type="V_WString" />
            <FormulaField expression="switch(&#xA;	trim([Operator]),&#xA;	'ERROR',&#xA;	null(),&#xA;	[Op1],&#xA;	'+', '-',&#xA;	'-','+',&#xA;	'*','/',&#xA;	'/','*'&#xA;)&#xA;	" field="NewOperator" size="1073741823" type="V_WString" />
            <FormulaField expression="if [Node] = 'Root' then null()&#xA;else [NewOperator]&#xA;endif" field="NewOperator" size="1073741823" type="V_WString" />
            <FormulaField expression="if([Node]='Root')&#xA;then null()&#xA;else [Node]&#xA;endif&#xA;" field="NewOp1" size="1073741823" type="V_WString" />
            <FormulaField expression="[Op2]" field="NewOp2" size="1073741823" type="V_WString" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Set values</AnnotationText>
          <DefaultAnnotationText>NewNode = [Op1]
NewOperator = switch(
	trim([Operator]),
	'ERROR',
	null(),
	[Op...</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
            <Field name="NewNode" size="1073741823" source="Formula: [Op1]" type="V_WString" />
            <Field name="NewOperator" size="1073741823" source="Formula: if [Node] = 'Root' then null()&#xA;else [NewOperator]&#xA;endif" type="V_WString" />
            <Field name="NewOp1" size="1073741823" source="Formula: if([Node]='Root')&#xA;then null()&#xA;else [Node]&#xA;endif&#xA;" type="V_WString" />
            <Field name="NewOp2" size="1073741823" source="Formula: [Op2]" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="11">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="630" y="174" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField expression="[Op2]" field="NewNode" size="1073741823" type="V_WString" />
            <FormulaField expression="'-'&#xA;	" field="NewOperator" size="1073741823" type="V_WString" />
            <FormulaField expression="[Node]" field="NewOp1" size="1073741823" type="V_WString" />
            <FormulaField expression="[Op1]" field="NewOp2" size="1073741823" type="V_WString" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Set the Values</AnnotationText>
          <DefaultAnnotationText><![CDATA[NewNode = [Op2]
NewOperator = '-'
	
NewOp1 = [Node]
NewOp2 = [Op1]
]]></DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
            <Field name="NewNode" size="1073741823" source="Formula: [Op2]" type="V_WString" />
            <Field name="NewOperator" size="1073741823" source="Formula: '-'&#xA; " type="V_WString" />
            <Field name="NewOp1" size="1073741823" source="Formula: [Node]" type="V_WString" />
            <Field name="NewOp2" size="1073741823" source="Formula: [Op1]" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="12">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Union.Union">
        <Position x="762" y="54" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <ByName_ErrorMode>Warning</ByName_ErrorMode>
          <ByName_OutputMode>All</ByName_OutputMode>
          <Mode>ByName</Mode>
          <SetOutputOrder value="False" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
            <Field name="NewNode" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="NewOperator" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="NewOp2" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="NewOp1" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxUnion" />
    </Node>
    <Node ToolID="13">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="846" y="54" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="True" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="Node" selected="False" />
            <SelectField field="Op1" selected="False" />
            <SelectField field="Operator" selected="False" />
            <SelectField field="Op2" selected="False" />
            <SelectField field="IsAlphaOp1" selected="False" />
            <SelectField field="IsAlphaOp2" selected="False" />
            <SelectField field="NewNode" selected="True" rename="Node" />
            <SelectField field="NewOp1" selected="True" rename="Op1" />
            <SelectField field="NewOperator" selected="True" rename="Operator" />
            <SelectField field="NewOp2" selected="True" rename="Op2" />
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Node" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="Op1" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="Operator" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="Op2" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="14">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="534" y="174" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Expression>[Operator] = '+'</Expression>
          <Mode>Custom</Mode>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[Operator] = '+'</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="16">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="534" y="246" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Expression>[Operator] = '-'</Expression>
          <Mode>Custom</Mode>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[Operator] = '-'</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="18">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="534" y="318" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Expression>[Operator] = '*'</Expression>
          <Mode>Custom</Mode>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[Operator] = '*'</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="20">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="534" y="390" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Expression>[Operator] = '/'</Expression>
          <Mode>Custom</Mode>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[Operator] = '/'</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="21">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="630" y="318" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField expression="[Op2]" field="NewNode" size="1073741823" type="V_WString" />
            <FormulaField expression="'/'&#xA;	" field="NewOperator" size="1073741823" type="V_WString" />
            <FormulaField expression="[Node]" field="NewOp1" size="1073741823" type="V_WString" />
            <FormulaField expression="[Op1]" field="NewOp2" size="1073741823" type="V_WString" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Set the Values</AnnotationText>
          <DefaultAnnotationText><![CDATA[NewNode = [Op2]
NewOperator = '/'
	
NewOp1 = [Node]
NewOp2 = [Op1]
]]></DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
            <Field name="NewNode" size="1073741823" source="Formula: [Op2]" type="V_WString" />
            <Field name="NewOperator" size="1073741823" source="Formula: '/'&#xA; " type="V_WString" />
            <Field name="NewOp1" size="1073741823" source="Formula: [Node]" type="V_WString" />
            <Field name="NewOp2" size="1073741823" source="Formula: [Op1]" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="22">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="630" y="246" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField expression="[Op2]" field="NewNode" size="1073741823" type="V_WString" />
            <FormulaField expression="'-'&#xA;	" field="NewOperator" size="1073741823" type="V_WString" />
            <FormulaField expression="[Op1]" field="NewOp1" size="1073741823" type="V_WString" />
            <FormulaField expression="[Node]" field="NewOp2" size="1073741823" type="V_WString" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Set the Values</AnnotationText>
          <DefaultAnnotationText><![CDATA[NewNode = [Op2]
NewOperator = '-'
	
NewOp1 = [Op1]
NewOp2 = [Node]
]]></DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
            <Field name="NewNode" size="1073741823" source="Formula: [Op2]" type="V_WString" />
            <Field name="NewOperator" size="1073741823" source="Formula: '-'&#xA; " type="V_WString" />
            <Field name="NewOp1" size="1073741823" source="Formula: [Op1]" type="V_WString" />
            <Field name="NewOp2" size="1073741823" source="Formula: [Node]" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="23">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="630" y="390" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField expression="[Op2]" field="NewNode" size="1073741823" type="V_WString" />
            <FormulaField expression="'/'&#xA;	" field="NewOperator" size="1073741823" type="V_WString" />
            <FormulaField expression="[Op1]" field="NewOp1" size="1073741823" type="V_WString" />
            <FormulaField expression="[Node]" field="NewOp2" size="1073741823" type="V_WString" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Set the Values</AnnotationText>
          <DefaultAnnotationText><![CDATA[NewNode = [Op2]
NewOperator = '/'
	
NewOp1 = [Op1]
NewOp2 = [Node]
]]></DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Node" size="19" source="TextInput:" type="V_String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
            <Field name="IsAlphaOp1" source="Formula: REGEX_Match([Op1],'.*([a-zA-Z]).*')&#xA;" type="Bool" />
            <Field name="IsAlphaOp2" source="Formula: REGEX_Match([Op2],'.*([a-zA-Z]).*')" type="Bool" />
            <Field name="NewNode" size="1073741823" source="Formula: [Op2]" type="V_WString" />
            <Field name="NewOperator" size="1073741823" source="Formula: '/'&#xA; " type="V_WString" />
            <Field name="NewOp1" size="1073741823" source="Formula: [Op1]" type="V_WString" />
            <Field name="NewOp2" size="1073741823" source="Formula: [Node]" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="24">
      <GuiSettings Plugin="AlteryxGuiToolkit.Questions.Tab.Tab">
        <Position x="0" y="0" width="59" height="59" />
      </GuiSettings>
      <Properties>
        <Configuration />
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
    </Node>
    <Node ToolID="25">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroOutput.MacroOutput">
        <Position x="966" y="54" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Name>Output26</Name>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Output</AnnotationText>
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Left">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="Node" source="File: D:\OneDrive\Documents\Alteryx data\AdventOfCode\2022\2022-12-21\EquationReverserTests.xlsx|||`Sheet1$`" type="Double" />
            <Field name="Op1" size="255" source="File: D:\OneDrive\Documents\Alteryx data\AdventOfCode\2022\2022-12-21\EquationReverserTests.xlsx|||`Sheet1$`" type="V_String" />
            <Field name="Operator" size="255" source="File: D:\OneDrive\Documents\Alteryx data\AdventOfCode\2022\2022-12-21\EquationReverserTests.xlsx|||`Sheet1$`" type="V_String" />
            <Field name="Op2" size="255" source="File: D:\OneDrive\Documents\Alteryx data\AdventOfCode\2022\2022-12-21\EquationReverserTests.xlsx|||`Sheet1$`" type="V_String" />
            <Field name="ExpectedAnswer" size="19" source="File: D:\OneDrive\Documents\Alteryx data\AdventOfCode\2022\2022-12-21\EquationReverserTests.xlsx|||`Sheet1$`" type="V_String" />
            <Field name="Logic" size="255" source="File: D:\OneDrive\Documents\Alteryx data\AdventOfCode\2022\2022-12-21\EquationReverserTests.xlsx|||`Sheet1$`" type="V_String" />
            <Field name="LongForm" size="255" source="File: D:\OneDrive\Documents\Alteryx data\AdventOfCode\2022\2022-12-21\EquationReverserTests.xlsx|||`Sheet1$`" type="V_String" />
            <Field name="ShortForm" size="255" source="File: D:\OneDrive\Documents\Alteryx data\AdventOfCode\2022\2022-12-21\EquationReverserTests.xlsx|||`Sheet1$`" type="V_String" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="Join">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="ExpectedAnswer" size="19" source="File: D:\OneDrive\Documents\Alteryx data\AdventOfCode\2022\2022-12-21\EquationReverserTests.xlsx|||`Sheet1$`" type="V_String" />
            <Field name="Right_RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="Node" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="Op1" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="Operator" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="Op2" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="Right">
          <RecordInfo>
            <Field name="RecordID" source="RecordID: Starting Value=1" type="Int32" />
            <Field name="Node" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="Op1" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="Operator" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
            <Field name="Op2" size="1073741823" source="Formula: (Multiple Sources)" type="V_WString" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroOutput" />
    </Node>
    <Node ToolID="26">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroInput.MacroInput">
        <Position x="54" y="54" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <UseFileInput value="False" />
          <Name>Input24</Name>
          <Abbrev />
          <ShowFieldMap value="True" />
          <Optional value="False" />
          <TextInput>
            <Configuration>
              <NumRows value="8" />
              <Fields>
                <Field name="Node" />
                <Field name="Op1" />
                <Field name="Operator" />
                <Field name="Op2" />
              </Fields>
              <Data>
                <r>
                  <c>a10</c>
                  <c>X</c>
                  <c>+</c>
                  <c>5</c>
                </r>
                <r>
                  <c>5</c>
                  <c>X</c>
                  <c>-</c>
                  <c>17</c>
                </r>
                <r>
                  <c>21</c>
                  <c>X</c>
                  <c>*</c>
                  <c>7</c>
                </r>
                <r>
                  <c>18</c>
                  <c>X</c>
                  <c>/</c>
                  <c>3</c>
                </r>
                <r>
                  <c>17</c>
                  <c>15</c>
                  <c>+</c>
                  <c>X</c>
                </r>
                <r>
                  <c>15</c>
                  <c>28</c>
                  <c>-</c>
                  <c>X</c>
                </r>
                <r>
                  <c>27</c>
                  <c>3</c>
                  <c>*</c>
                  <c>X</c>
                </r>
                <r>
                  <c>2</c>
                  <c>14</c>
                  <c>/</c>
                  <c>X</c>
                </r>
              </Data>
            </Configuration>
          </TextInput>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Input</AnnotationText>
          <DefaultAnnotationText />
          <Left value="True" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Node" size="3" source="TextInput:" type="String" />
            <Field name="Op1" size="2" source="TextInput:" type="String" />
            <Field name="Operator" size="1" source="TextInput:" type="String" />
            <Field name="Op2" size="2" source="TextInput:" type="String" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroInput" />
    </Node>
  </Nodes>
  <Connections>
    <Connection name="#1">
      <Origin ToolID="5" Connection="Output" />
      <Destination ToolID="12" Connection="Input" />
    </Connection>
    <Connection name="#2">
      <Origin ToolID="10" Connection="Output" />
      <Destination ToolID="12" Connection="Input" />
    </Connection>
    <Connection name="#3">
      <Origin ToolID="11" Connection="Output" />
      <Destination ToolID="12" Connection="Input" />
    </Connection>
    <Connection name="#5">
      <Origin ToolID="21" Connection="Output" />
      <Destination ToolID="12" Connection="Input" />
    </Connection>
    <Connection name="#4">
      <Origin ToolID="22" Connection="Output" />
      <Destination ToolID="12" Connection="Input" />
    </Connection>
    <Connection name="#6">
      <Origin ToolID="23" Connection="Output" />
      <Destination ToolID="12" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="6" Connection="Output" />
      <Destination ToolID="7" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="7" Connection="Output" />
      <Destination ToolID="8" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="8" Connection="True" />
      <Destination ToolID="5" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="8" Connection="False" />
      <Destination ToolID="9" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="9" Connection="True" />
      <Destination ToolID="10" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="9" Connection="False" />
      <Destination ToolID="14" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="9" Connection="False" />
      <Destination ToolID="16" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="9" Connection="False" />
      <Destination ToolID="18" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="9" Connection="False" />
      <Destination ToolID="20" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="12" Connection="Output" />
      <Destination ToolID="13" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="13" Connection="Output" />
      <Destination ToolID="25" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="14" Connection="True" />
      <Destination ToolID="11" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="16" Connection="True" />
      <Destination ToolID="22" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="18" Connection="True" />
      <Destination ToolID="21" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="20" Connection="True" />
      <Destination ToolID="23" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="26" Connection="Output" />
      <Destination ToolID="6" Connection="Input" />
    </Connection>
  </Connections>
  <Properties>
    <Memory default="True" />
    <GlobalRecordLimit value="0" />
    <TempFiles default="True" />
    <Annotation on="True" includeToolName="False" />
    <ConvErrorLimit value="10" />
    <ConvErrorLimit_Stop value="False" />
    <CancelOnError value="False" />
    <DisableBrowse value="False" />
    <EnablePerformanceProfiling value="False" />
    <PredictiveToolsCodePage value="1252" />
    <DisableAllOutput value="False" />
    <ShowAllMacroMessages value="False" />
    <ShowConnectionStatusIsOn value="True" />
    <ShowConnectionStatusOnlyWhenRunning value="True" />
    <ZoomLevel value="0" />
    <LayoutType>Horizontal</LayoutType>
    <MetaInfo>
      <NameIsFileName value="True" />
      <Name>SolveForX</Name>
      <Description />
      <RootToolName />
      <ToolVersion />
      <ToolInDb value="False" />
      <CategoryName />
      <SearchTags />
      <Author />
      <Company />
      <Copyright />
      <DescriptionLink actual="" displayed="" />
      <Example>
        <Description />
        <File />
      </Example>
      <WorkflowId value="4820213a-3bea-445b-8aa4-8295c22d7391" />
      <Telemetry>
        <PreviousWorkflowId value="" />
        <OriginWorkflowId value="4820213a-3bea-445b-8aa4-8295c22d7391" />
      </Telemetry>
    </MetaInfo>
    <Events>
      <Enabled value="True" />
    </Events>
    <RuntimeProperties>
      <Actions />
      <Questions>
        <Question>
          <Type>Tab</Type>
          <Description>Questions</Description>
          <Name>Tab (24)</Name>
          <ToolId value="24" />
          <Questions>
            <Question>
              <Type>MacroOutput</Type>
              <Description />
              <Name>Macro Output (25)</Name>
              <ToolId value="25" />
            </Question>
            <Question>
              <Type>MacroInput</Type>
              <Description />
              <Name>Macro Input (26)</Name>
              <ToolId value="26" />
            </Question>
          </Questions>
        </Question>
      </Questions>
      <ModuleType>Macro</ModuleType>
      <MacroCustomHelp value="False" />
      <MacroDynamicOutputFields value="False" />
      <MacroImage></MacroImage>
      <MacroInputs />
      <MacroOutputs />
      <Wiz_CustomHelp value="False" />
      <Wiz_CustomGraphic value="False" />
      <Wiz_ShowOutput value="True" />
      <Wiz_OpenOutputTools>
        <Tool ToolId="25" Selected="True" />
        <Tool ToolId="26" Selected="True" />
      </Wiz_OpenOutputTools>
      <Wiz_OutputMessage />
      <Wiz_NoOutputFilesMessage />
      <Wiz_ChainRunWizard />
    </RuntimeProperties>
  </Properties>
</AlteryxDocument>