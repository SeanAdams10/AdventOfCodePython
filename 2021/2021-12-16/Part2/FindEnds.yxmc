<?xml version="1.0"?>
<AlteryxDocument yxmdVer="2021.3">
  <Nodes>
    <Node ToolID="5">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MultiRowFormula.MultiRowFormula">
        <Position x="390" y="133" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <UpdateField value="False" />
          <UpdateField_Name>Iteration</UpdateField_Name>
          <CreateField_Name>PotentialCompress</CreateField_Name>
          <CreateField_Type>Int32</CreateField_Type>
          <CreateField_Size>4</CreateField_Size>
          <OtherRows>Empty</OtherRows>
          <NumRows value="1" />
          <Expression><![CDATA[if [Op] !='Literal' and [Row+1:Op] = 'Literal' 
//this is a an operator followed by a literal
    then [NodeID]
elseif [Op]='Literal'
    then [Row-1:PotentialCompress]
else null()
endif
]]></Expression>
          <GroupByFields />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Identify the candidates for leaf compression</AnnotationText>
          <DefaultAnnotationText>if [Op] !='Literal' and [Row+1:Op] = 'Literal' 
//this is a a...</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="LengthTypeID" source="TextInput:" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMultiRowFormula" />
    </Node>
    <Node ToolID="15">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MultiRowFormula.MultiRowFormula">
        <Position x="858" y="121" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <UpdateField value="False" />
          <UpdateField_Name />
          <CreateField_Name>RemainingLength</CreateField_Name>
          <CreateField_Type>Int32</CreateField_Type>
          <CreateField_Size>4</CreateField_Size>
          <OtherRows>Empty</OtherRows>
          <NumRows value="1" />
          <Expression>if [Op] != 'literal' then [SubPacketLenInt]
else [Row-1:RemainingLength] - [NodeLength]
endif</Expression>
          <GroupByFields>
            <Field field="PotentialCompress" />
          </GroupByFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Is node at leaf level?</AnnotationText>
          <DefaultAnnotationText>if [Op] != 'literal' then [SubPacketLenInt]
else [Row-1:Remai...</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="Asc" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMultiRowFormula" />
    </Node>
    <Node ToolID="16">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MultiRowFormula.MultiRowFormula">
        <Position x="474" y="133" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <UpdateField value="True" />
          <UpdateField_Name>LengthTypeID</UpdateField_Name>
          <CreateField_Name>New Field</CreateField_Name>
          <CreateField_Type>Int32</CreateField_Type>
          <CreateField_Size>4</CreateField_Size>
          <OtherRows>Empty</OtherRows>
          <NumRows value="1" />
          <Expression>if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [LengthTypeID] endif</Expression>
          <GroupByFields />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Carry down length type ID</AnnotationText>
          <DefaultAnnotationText>if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [Len...</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field description="Formula: if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [LengthTypeID] endif" name="LengthTypeID" source="Formula: if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [LengthTypeID] endif" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMultiRowFormula" />
    </Node>
    <Node ToolID="17">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="666" y="133" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>=</Operator>
            <Field>LengthTypeID</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2021-12-22 13:25:00</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <Operand>0</Operand>
              <StartDate>2021-12-22 13:25:00</StartDate>
              <EndDate>2021-12-22 13:25:00</EndDate>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[LengthTypeID] = 0</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field description="Formula: if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [LengthTypeID] endif" name="LengthTypeID" source="Formula: if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [LengthTypeID] endif" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field description="Formula: if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [LengthTypeID] endif" name="LengthTypeID" source="Formula: if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [LengthTypeID] endif" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="18">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="762" y="121" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="SubPacketCountInt" selected="False" />
            <SelectField field="LengthTypeID" selected="False" />
            <SelectField field="EntryIndentLevel" selected="False" />
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="19">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="954" y="121" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>&gt;=</Operator>
            <Field>RemainingLength</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2021-12-22 13:29:17</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <Operand>-10</Operand>
              <StartDate>2021-12-22 13:29:17</StartDate>
              <EndDate>2021-12-22 13:29:17</EndDate>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[RemainingLength] &gt;= -10</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="Asc" />
          </SortInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="Asc" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="20">
      <GuiSettings Plugin="AlteryxSpatialPluginsGui.Summarize.Summarize">
        <Position x="1050" y="121" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <SummarizeFields>
            <SummarizeField field="PotentialCompress" action="GroupBy" rename="PotentialCompress" />
            <SummarizeField field="RemainingLength" action="Min" rename="Min_RemainingLength" />
          </SummarizeFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Summarize: GroupBy - PotentialCompress" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="Min_RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="Asc" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxSpatialPluginsEngine.dll" EngineDllEntryPoint="AlteryxSummarize" />
    </Node>
    <Node ToolID="21">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Join.Join">
        <Position x="1146" y="121" />
      </GuiSettings>
      <Properties>
        <Configuration joinByRecordPos="False">
          <JoinInfo connection="Left">
            <Field field="PotentialCompress" />
          </JoinInfo>
          <JoinInfo connection="Right">
            <Field field="PotentialCompress" />
          </JoinInfo>
          <SelectConfiguration>
            <Configuration outputConnection="Join">
              <OrderChanged value="False" />
              <CommaDecimal value="False" />
              <SelectFields>
                <SelectField field="Left_NodeID" selected="True" input="Left_" />
                <SelectField field="Left_Op" selected="True" input="Left_" />
                <SelectField field="Left_LiteralValue" selected="True" input="Left_" />
                <SelectField field="Left_SubPacketLenInt" selected="True" input="Left_" />
                <SelectField field="Left_NodeLength" selected="True" input="Left_" />
                <SelectField field="Left_PotentialCompress" selected="True" input="Left_" />
                <SelectField field="Left_RemainingLength" selected="True" input="Left_" />
                <SelectField field="Right_PotentialCompress" selected="False" rename="Right_PotentialCompress" input="Right_" />
                <SelectField field="Right_Min_RemainingLength" selected="True" input="Right_" />
                <SelectField field="Left_EntryTextLen" selected="True" input="Left_" />
                <SelectField field="*Unknown" selected="False" />
              </SelectFields>
            </Configuration>
          </SelectConfiguration>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Left">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo noProgress="True">
            <Field field="PotentialCompress" />
          </SortInfo>
        </MetaInfo>
        <MetaInfo connection="Join">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="Min_RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="" />
          </SortInfo>
        </MetaInfo>
        <MetaInfo connection="Right">
          <RecordInfo>
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Summarize: GroupBy - PotentialCompress" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="Min_RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo noProgress="True">
            <Field field="PotentialCompress" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxJoin" />
    </Node>
    <Node ToolID="22">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="1242" y="121" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>=</Operator>
            <Field>Min_RemainingLength</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2021-12-22 13:30:53</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <Operand>0</Operand>
              <StartDate>2021-12-22 13:30:53</StartDate>
              <EndDate>2021-12-22 13:30:53</EndDate>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[Min_RemainingLength] = 0</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="Min_RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="" />
          </SortInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" name="Min_RemainingLength" source="Formula: if [Op] != 'literal' then [SubPacketLenInt]&#xA;else [Row-1:RemainingLength] - [NodeLength]&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="23">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroOutput.MacroOutput">
        <Position x="2694" y="116" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Name>Rework</Name>
          <Abbrev>R</Abbrev>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Build the code to execute this summary</AnnotationText>
          <DefaultAnnotationText>Build the code to execute this summary
R Output</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroOutput" />
    </Node>
    <Node ToolID="24">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MultiRowFormula.MultiRowFormula">
        <Position x="858" y="265" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <UpdateField value="False" />
          <UpdateField_Name />
          <CreateField_Name>RemainingPackets</CreateField_Name>
          <CreateField_Type>Int32</CreateField_Type>
          <CreateField_Size>4</CreateField_Size>
          <OtherRows>Empty</OtherRows>
          <NumRows value="1" />
          <Expression>if [Op] != 'literal' then [SubPacketCountInt]
else [Row-1:RemainingPackets] - 1
endif</Expression>
          <GroupByFields>
            <Field field="PotentialCompress" />
          </GroupByFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <AnnotationText>Is node at leaf level?</AnnotationText>
          <DefaultAnnotationText>if [Op] != 'literal' then [SubPacketCountInt]
else [Row-1:Rem...</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" name="RemainingPackets" source="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="Asc" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMultiRowFormula" />
    </Node>
    <Node ToolID="25">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="762" y="265" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="SubPacketLenInt" selected="False" />
            <SelectField field="LengthTypeID" selected="False" />
            <SelectField field="EntryIndentLevel" selected="False" />
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="26">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="954" y="265" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>&gt;=</Operator>
            <Field>RemainingPackets</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2021-12-22 13:33:55</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <StartDate>2021-12-22 13:33:55</StartDate>
              <EndDate>2021-12-22 13:33:55</EndDate>
              <Operand>0</Operand>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[RemainingPackets] &gt;= 0</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" name="RemainingPackets" source="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="Asc" />
          </SortInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" name="RemainingPackets" source="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="Asc" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="27">
      <GuiSettings Plugin="AlteryxSpatialPluginsGui.Summarize.Summarize">
        <Position x="1050" y="265" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <SummarizeFields>
            <SummarizeField field="PotentialCompress" action="GroupBy" rename="PotentialCompress" />
            <SummarizeField field="RemainingPackets" action="Min" rename="Min_RemainingPackets" />
          </SummarizeFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Summarize: GroupBy - PotentialCompress" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" name="Min_RemainingPackets" source="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="Asc" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxSpatialPluginsEngine.dll" EngineDllEntryPoint="AlteryxSummarize" />
    </Node>
    <Node ToolID="28">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Join.Join">
        <Position x="1146" y="265" />
      </GuiSettings>
      <Properties>
        <Configuration joinByRecordPos="False">
          <JoinInfo connection="Left">
            <Field field="PotentialCompress" />
          </JoinInfo>
          <JoinInfo connection="Right">
            <Field field="PotentialCompress" />
          </JoinInfo>
          <SelectConfiguration>
            <Configuration outputConnection="Join">
              <OrderChanged value="False" />
              <CommaDecimal value="False" />
              <SelectFields>
                <SelectField field="Left_NodeID" selected="True" input="Left_" />
                <SelectField field="Left_Op" selected="True" input="Left_" />
                <SelectField field="Left_LiteralValue" selected="True" input="Left_" />
                <SelectField field="Left_NodeLength" selected="True" input="Left_" />
                <SelectField field="Left_PotentialCompress" selected="True" input="Left_" />
                <SelectField field="Right_PotentialCompress" selected="False" rename="Right_PotentialCompress" input="Right_" />
                <SelectField field="Right_Min_RemainingPackets" selected="True" input="Right_" />
                <SelectField field="Left_EntryTextLen" selected="True" input="Left_" />
                <SelectField field="*Unknown" selected="False" />
              </SelectFields>
            </Configuration>
          </SelectConfiguration>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Left">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" name="RemainingPackets" source="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo noProgress="True">
            <Field field="PotentialCompress" />
          </SortInfo>
        </MetaInfo>
        <MetaInfo connection="Join">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" name="Min_RemainingPackets" source="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="" />
          </SortInfo>
        </MetaInfo>
        <MetaInfo connection="Right">
          <RecordInfo>
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Summarize: GroupBy - PotentialCompress" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" name="Min_RemainingPackets" source="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo noProgress="True">
            <Field field="PotentialCompress" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxJoin" />
    </Node>
    <Node ToolID="29">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="1242" y="265" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>=</Operator>
            <Field>Min_RemainingPackets</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2021-12-22 13:34:30</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <Operand>0</Operand>
              <StartDate>2021-12-22 13:34:30</StartDate>
              <EndDate>2021-12-22 13:34:30</EndDate>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[Min_RemainingPackets] = 0</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" name="Min_RemainingPackets" source="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="" />
          </SortInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field description="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" name="Min_RemainingPackets" source="Formula: if [Op] != 'literal' then [SubPacketCountInt]&#xA;else [Row-1:RemainingPackets] - 1&#xA;endif" type="Int32" />
          </RecordInfo>
          <SortInfo>
            <Field field="PotentialCompress" order="" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="31">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="570" y="133" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>IsNotNull</Operator>
            <Field>PotentialCompress</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2021-12-22 13:33:38</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <Operand>
              </Operand>
              <StartDate>2021-12-22 13:33:38</StartDate>
              <EndDate>2021-12-22 13:33:38</EndDate>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>!IsNull([PotentialCompress])</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field description="Formula: if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [LengthTypeID] endif" name="LengthTypeID" source="Formula: if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [LengthTypeID] endif" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field description="Formula: if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [LengthTypeID] endif" name="LengthTypeID" source="Formula: if isnull([LengthTypeID]) then [Row-1:LengthTypeID] else [LengthTypeID] endif" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="PotentialCompress" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="32">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="1338" y="121" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="True" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="PotentialCompress" selected="True" rename="RootNode" />
            <SelectField field="NodeID" selected="True" />
            <SelectField field="Op" selected="True" />
            <SelectField field="LiteralValue" selected="True" />
            <SelectField field="SubPacketLenInt" selected="False" />
            <SelectField field="EntryTextLen" selected="False" />
            <SelectField field="NodeLength" selected="True" />
            <SelectField field="RemainingLength" selected="False" />
            <SelectField field="Min_RemainingLength" selected="False" />
            <SelectField field="*Unknown" selected="False" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="RootNode" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
          </RecordInfo>
          <SortInfo>
            <Field field="RootNode" order="" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="33">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="1350" y="265" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="True" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="PotentialCompress" selected="True" rename="RootNode" />
            <SelectField field="NodeID" selected="True" />
            <SelectField field="Op" selected="True" />
            <SelectField field="LiteralValue" selected="True" />
            <SelectField field="EntryTextLen" selected="False" />
            <SelectField field="NodeLength" selected="True" />
            <SelectField field="Min_RemainingPackets" selected="False" />
            <SelectField field="*Unknown" selected="False" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="RootNode" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
          </RecordInfo>
          <SortInfo>
            <Field field="RootNode" order="" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="34">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Union.Union">
        <Position x="1434" y="116" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <ByName_ErrorMode>Warning</ByName_ErrorMode>
          <ByName_OutputMode>All</ByName_OutputMode>
          <Mode>ByName</Mode>
          <SetOutputOrder value="False" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="RootNode" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxUnion" />
    </Node>
    <Node ToolID="43">
      <GuiSettings>
        <Position x="2310" y="116" />
      </GuiSettings>
      <Properties>
        <Configuration />
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output9">
          <RecordInfo>
            <Field name="Count" source="(Multiple Sources)" type="Int64" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings Macro="CountRecords.yxmc" />
    </Node>
    <Node ToolID="44">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AppendFields.AppendFields">
        <Position x="2406" y="116" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <CartesianMode>Allow</CartesianMode>
          <SelectConfiguration>
            <Configuration outputConnection="Output">
              <OrderChanged value="False" />
              <CommaDecimal value="False" />
              <SelectFields>
                <SelectField field="*Unknown" selected="True" />
              </SelectFields>
            </Configuration>
          </SelectConfiguration>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="Count" source="(Multiple Sources)" type="Int64" />
            <Field name="NodeLength" source="(Multiple Sources)" type="Int64" />
            <Field name="NodeID" source="TextInput: (Multiple Sources)" type="Int16" />
            <Field name="Op" size="12" source="(Multiple Sources)" type="V_String" />
            <Field name="LiteralValue" source="(Multiple Sources)" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="LengthTypeID" source="TextInput:" type="Byte" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxAppendFields" />
    </Node>
    <Node ToolID="46">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Formula.Formula">
        <Position x="2418" y="265" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <FormulaFields>
            <FormulaField expression="[Engine.IterationNumber]" field="Iteration" size="1073741823" type="V_WString" />
          </FormulaFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText><![CDATA[Iteration = [Engine.IterationNumber]
]]></DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="NodeLength" source="(Multiple Sources)" type="Int64" />
            <Field name="NodeID" source="TextInput: (Multiple Sources)" type="Int16" />
            <Field name="Op" size="12" source="(Multiple Sources)" type="V_String" />
            <Field name="LiteralValue" source="(Multiple Sources)" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="LengthTypeID" source="TextInput:" type="Byte" />
            <Field name="Iteration" size="1073741823" source="Formula: [Engine.IterationNumber]" type="V_WString" />
          </RecordInfo>
          <SortInfo>
            <Field field="NodeID" order="Asc" />
          </SortInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFormula" />
    </Node>
    <Node ToolID="47">
      <GuiSettings Plugin="AlteryxGuiToolkit.Questions.Tab.Tab">
        <Position x="0" y="0" width="59" height="59" />
      </GuiSettings>
      <Properties>
        <Configuration />
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
    </Node>
    <Node ToolID="48">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
        <Position x="2502" y="116" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Mode>Simple</Mode>
          <Simple>
            <Operator>&gt;</Operator>
            <Field>Count</Field>
            <Operands>
              <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
              <DateType>fixed</DateType>
              <PeriodDate>2021-12-22 14:15:24</PeriodDate>
              <PeriodType>
              </PeriodType>
              <PeriodCount>0</PeriodCount>
              <StartDate>2021-12-22 14:15:24</StartDate>
              <EndDate>2021-12-22 14:15:24</EndDate>
              <Operand>1</Operand>
            </Operands>
          </Simple>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>[Count] &gt; 1</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="True">
          <RecordInfo>
            <Field name="Count" source="(Multiple Sources)" type="Int64" />
            <Field name="NodeLength" source="(Multiple Sources)" type="Int64" />
            <Field name="NodeID" source="TextInput: (Multiple Sources)" type="Int16" />
            <Field name="Op" size="12" source="(Multiple Sources)" type="V_String" />
            <Field name="LiteralValue" source="(Multiple Sources)" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="LengthTypeID" source="TextInput:" type="Byte" />
          </RecordInfo>
        </MetaInfo>
        <MetaInfo connection="False">
          <RecordInfo>
            <Field name="Count" source="(Multiple Sources)" type="Int64" />
            <Field name="NodeLength" source="(Multiple Sources)" type="Int64" />
            <Field name="NodeID" source="TextInput: (Multiple Sources)" type="Int16" />
            <Field name="Op" size="12" source="(Multiple Sources)" type="V_String" />
            <Field name="LiteralValue" source="(Multiple Sources)" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="LengthTypeID" source="TextInput:" type="Byte" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
    </Node>
    <Node ToolID="49">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="2598" y="116" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="Count" selected="False" />
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="NodeLength" source="(Multiple Sources)" type="Int64" />
            <Field name="NodeID" source="TextInput: (Multiple Sources)" type="Int16" />
            <Field name="Op" size="12" source="(Multiple Sources)" type="V_String" />
            <Field name="LiteralValue" source="(Multiple Sources)" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="LengthTypeID" source="TextInput:" type="Byte" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="50">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroOutput.MacroOutput">
        <Position x="2574" y="265" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Name>MainOutput</Name>
          <Abbrev>M</Abbrev>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>M Output</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroOutput" />
    </Node>
    <Node ToolID="51">
      <GuiSettings Plugin="AlteryxBasePluginsGui.MacroInput.MacroInput">
        <Position x="54" y="133" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <UseFileInput value="False" />
          <Name>Inbound</Name>
          <Abbrev>I</Abbrev>
          <ShowFieldMap value="True" />
          <Optional value="False" />
          <TextInput>
            <Configuration>
              <NumRows value="268" />
              <Fields>
                <Field name="NodeID" />
                <Field name="Op" />
                <Field name="LiteralValue" />
                <Field name="SubPacketLenInt" />
                <Field name="SubPacketCountInt" />
                <Field name="LengthTypeID" />
                <Field name="NodeLength" />
              </Fields>
              <Data>
                <r>
                  <c>0</c>
                  <c>Sum</c>
                  <c />
                  <c>5439</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>1</c>
                  <c>Literal</c>
                  <c>282</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>2</c>
                  <c>Max</c>
                  <c />
                  <c />
                  <c>4</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>3</c>
                  <c>Literal</c>
                  <c>370297</c>
                  <c />
                  <c />
                  <c />
                  <c>31</c>
                </r>
                <r>
                  <c>4</c>
                  <c>Literal</c>
                  <c>35</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>5</c>
                  <c>Literal</c>
                  <c>122658904</c>
                  <c />
                  <c />
                  <c />
                  <c>41</c>
                </r>
                <r>
                  <c>6</c>
                  <c>Literal</c>
                  <c>213232</c>
                  <c />
                  <c />
                  <c />
                  <c>31</c>
                </r>
                <r>
                  <c>7</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>8</c>
                  <c>Literal</c>
                  <c>3214</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>9</c>
                  <c>Greater Than</c>
                  <c />
                  <c>72</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>10</c>
                  <c>Literal</c>
                  <c>2725347942</c>
                  <c />
                  <c />
                  <c />
                  <c>46</c>
                </r>
                <r>
                  <c>11</c>
                  <c>Literal</c>
                  <c>14337</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>12</c>
                  <c>Literal</c>
                  <c>113</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>13</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>14</c>
                  <c>Literal</c>
                  <c>676445</c>
                  <c />
                  <c />
                  <c />
                  <c>31</c>
                </r>
                <r>
                  <c>15</c>
                  <c>Greater Than</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>16</c>
                  <c>Literal</c>
                  <c>14</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>17</c>
                  <c>Literal</c>
                  <c>102004</c>
                  <c />
                  <c />
                  <c />
                  <c>31</c>
                </r>
                <r>
                  <c>18</c>
                  <c>Product</c>
                  <c />
                  <c>16</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>19</c>
                  <c>Literal</c>
                  <c>79</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>20</c>
                  <c>Sum</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>21</c>
                  <c>Literal</c>
                  <c>42402</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>22</c>
                  <c>Literal</c>
                  <c>104</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>23</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>24</c>
                  <c>Literal</c>
                  <c>24762196</c>
                  <c />
                  <c />
                  <c />
                  <c>41</c>
                </r>
                <r>
                  <c>25</c>
                  <c>Greater Than</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>26</c>
                  <c>Literal</c>
                  <c>2365</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>27</c>
                  <c>Literal</c>
                  <c>2365</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>28</c>
                  <c>Min</c>
                  <c />
                  <c />
                  <c>3</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>29</c>
                  <c>Literal</c>
                  <c>192094127</c>
                  <c />
                  <c />
                  <c />
                  <c>41</c>
                </r>
                <r>
                  <c>30</c>
                  <c>Literal</c>
                  <c>18470</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>31</c>
                  <c>Literal</c>
                  <c>100</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>32</c>
                  <c>Sum</c>
                  <c />
                  <c>31</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>33</c>
                  <c>Literal</c>
                  <c>190487</c>
                  <c />
                  <c />
                  <c />
                  <c>31</c>
                </r>
                <r>
                  <c>34</c>
                  <c>Literal</c>
                  <c>12</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>35</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>36</c>
                  <c>Less Than</c>
                  <c />
                  <c>42</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>37</c>
                  <c>Literal</c>
                  <c>3087</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>38</c>
                  <c>Literal</c>
                  <c>3087</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>39</c>
                  <c>Literal</c>
                  <c>104530938</c>
                  <c />
                  <c />
                  <c />
                  <c>41</c>
                </r>
                <r>
                  <c>40</c>
                  <c>Min</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>41</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>42</c>
                  <c>Sum</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>43</c>
                  <c>Product</c>
                  <c />
                  <c>372</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>44</c>
                  <c>Min</c>
                  <c />
                  <c>350</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>45</c>
                  <c>Max</c>
                  <c />
                  <c>328</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>46</c>
                  <c>Min</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>47</c>
                  <c>Max</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>48</c>
                  <c>Sum</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>49</c>
                  <c>Max</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>50</c>
                  <c>Sum</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>51</c>
                  <c>Product</c>
                  <c />
                  <c>216</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>52</c>
                  <c>Min</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>53</c>
                  <c>Min</c>
                  <c />
                  <c>176</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>54</c>
                  <c>Max</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>55</c>
                  <c>Product</c>
                  <c />
                  <c>136</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>56</c>
                  <c>Min</c>
                  <c />
                  <c>114</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>57</c>
                  <c>Min</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>58</c>
                  <c>Min</c>
                  <c />
                  <c>74</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>59</c>
                  <c>Min</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>60</c>
                  <c>Literal</c>
                  <c>778514865480</c>
                  <c />
                  <c />
                  <c />
                  <c>56</c>
                </r>
                <r>
                  <c>61</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>62</c>
                  <c>Literal</c>
                  <c>6</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>63</c>
                  <c>Less Than</c>
                  <c />
                  <c>47</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>64</c>
                  <c>Literal</c>
                  <c>72</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>65</c>
                  <c>Literal</c>
                  <c>826194</c>
                  <c />
                  <c />
                  <c />
                  <c>31</c>
                </r>
                <r>
                  <c>66</c>
                  <c>Literal</c>
                  <c>85</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>67</c>
                  <c>Product</c>
                  <c />
                  <c>32</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>68</c>
                  <c>Literal</c>
                  <c>45</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>69</c>
                  <c>Literal</c>
                  <c>191</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>70</c>
                  <c>Literal</c>
                  <c>7</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>71</c>
                  <c>Product</c>
                  <c />
                  <c>135</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>72</c>
                  <c>Greater Than</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>73</c>
                  <c>Sum</c>
                  <c />
                  <c />
                  <c>3</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>74</c>
                  <c>Literal</c>
                  <c>6</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>75</c>
                  <c>Literal</c>
                  <c>6</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>76</c>
                  <c>Literal</c>
                  <c>3</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>77</c>
                  <c>Sum</c>
                  <c />
                  <c>33</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>78</c>
                  <c>Literal</c>
                  <c>15</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>79</c>
                  <c>Literal</c>
                  <c>3</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>80</c>
                  <c>Literal</c>
                  <c>13</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>81</c>
                  <c>Literal</c>
                  <c>15</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>82</c>
                  <c>Literal</c>
                  <c>244</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>83</c>
                  <c>Max</c>
                  <c />
                  <c>31</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>84</c>
                  <c>Literal</c>
                  <c>508140</c>
                  <c />
                  <c />
                  <c />
                  <c>31</c>
                </r>
                <r>
                  <c>85</c>
                  <c>Product</c>
                  <c />
                  <c>106</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>86</c>
                  <c>Less Than</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>87</c>
                  <c>Literal</c>
                  <c>192310099</c>
                  <c />
                  <c />
                  <c />
                  <c>41</c>
                </r>
                <r>
                  <c>88</c>
                  <c>Literal</c>
                  <c>22329</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>89</c>
                  <c>Literal</c>
                  <c>1441</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>90</c>
                  <c>Product</c>
                  <c />
                  <c>95</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>91</c>
                  <c>Equal</c>
                  <c />
                  <c>52</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>92</c>
                  <c>Literal</c>
                  <c>10733978</c>
                  <c />
                  <c />
                  <c />
                  <c>36</c>
                </r>
                <r>
                  <c>93</c>
                  <c>Literal</c>
                  <c>114</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>94</c>
                  <c>Literal</c>
                  <c>349</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>95</c>
                  <c>Literal</c>
                  <c>60648</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>96</c>
                  <c>Product</c>
                  <c />
                  <c>101</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>97</c>
                  <c>Equal</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>98</c>
                  <c>Literal</c>
                  <c>3919</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>99</c>
                  <c>Literal</c>
                  <c>3919</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>100</c>
                  <c>Literal</c>
                  <c>97536684</c>
                  <c />
                  <c />
                  <c />
                  <c>41</c>
                </r>
                <r>
                  <c>101</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>3</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>102</c>
                  <c>Sum</c>
                  <c />
                  <c>33</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>103</c>
                  <c>Literal</c>
                  <c>12</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>104</c>
                  <c>Literal</c>
                  <c>4</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>105</c>
                  <c>Literal</c>
                  <c>9</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>106</c>
                  <c>Sum</c>
                  <c />
                  <c>33</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>107</c>
                  <c>Literal</c>
                  <c>15</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>108</c>
                  <c>Literal</c>
                  <c>14</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>109</c>
                  <c>Literal</c>
                  <c>15</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>110</c>
                  <c>Sum</c>
                  <c />
                  <c />
                  <c>3</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>111</c>
                  <c>Literal</c>
                  <c>7</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>112</c>
                  <c>Literal</c>
                  <c>7</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>113</c>
                  <c>Literal</c>
                  <c>8</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>114</c>
                  <c>Sum</c>
                  <c />
                  <c>73</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>115</c>
                  <c>Literal</c>
                  <c>25</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>116</c>
                  <c>Literal</c>
                  <c>2050</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>117</c>
                  <c>Literal</c>
                  <c>10239519</c>
                  <c />
                  <c />
                  <c />
                  <c>36</c>
                </r>
                <r>
                  <c>118</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>119</c>
                  <c>Greater Than</c>
                  <c />
                  <c>110</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>120</c>
                  <c>Sum</c>
                  <c />
                  <c>33</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>121</c>
                  <c>Literal</c>
                  <c>5</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>122</c>
                  <c>Literal</c>
                  <c>14</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>123</c>
                  <c>Literal</c>
                  <c>7</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>124</c>
                  <c>Sum</c>
                  <c />
                  <c>33</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>125</c>
                  <c>Literal</c>
                  <c>13</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>126</c>
                  <c>Literal</c>
                  <c>5</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>127</c>
                  <c>Literal</c>
                  <c>9</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>128</c>
                  <c>Literal</c>
                  <c>108</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>129</c>
                  <c>Product</c>
                  <c />
                  <c>76</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>130</c>
                  <c>Literal</c>
                  <c>1384</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>131</c>
                  <c>Less Than</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>132</c>
                  <c>Literal</c>
                  <c>2943</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>133</c>
                  <c>Literal</c>
                  <c>172</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>134</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>135</c>
                  <c>Literal</c>
                  <c>148</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>136</c>
                  <c>Less Than</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>137</c>
                  <c>Literal</c>
                  <c>203</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>138</c>
                  <c>Literal</c>
                  <c>8475127</c>
                  <c />
                  <c />
                  <c />
                  <c>36</c>
                </r>
                <r>
                  <c>139</c>
                  <c>Literal</c>
                  <c>1</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>140</c>
                  <c>Max</c>
                  <c />
                  <c>140</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>141</c>
                  <c>Literal</c>
                  <c>3488</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>142</c>
                  <c>Literal</c>
                  <c>12505547</c>
                  <c />
                  <c />
                  <c />
                  <c>36</c>
                </r>
                <r>
                  <c>143</c>
                  <c>Literal</c>
                  <c>202</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>144</c>
                  <c>Literal</c>
                  <c>2001682382</c>
                  <c />
                  <c />
                  <c />
                  <c>46</c>
                </r>
                <r>
                  <c>145</c>
                  <c>Literal</c>
                  <c>1808</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>146</c>
                  <c>Literal</c>
                  <c>39841</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>147</c>
                  <c>Product</c>
                  <c />
                  <c>120</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>148</c>
                  <c>Less Than</c>
                  <c />
                  <c>52</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>149</c>
                  <c>Literal</c>
                  <c>60591</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>150</c>
                  <c>Literal</c>
                  <c>60591</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>151</c>
                  <c>Literal</c>
                  <c>2373583704</c>
                  <c />
                  <c />
                  <c />
                  <c>46</c>
                </r>
                <r>
                  <c>152</c>
                  <c>Product</c>
                  <c />
                  <c>64</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>153</c>
                  <c>Literal</c>
                  <c>97</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>154</c>
                  <c>Literal</c>
                  <c>43</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>155</c>
                  <c>Literal</c>
                  <c>119</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>156</c>
                  <c>Literal</c>
                  <c>145</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>157</c>
                  <c>Sum</c>
                  <c />
                  <c>161</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>158</c>
                  <c>Product</c>
                  <c />
                  <c>33</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>159</c>
                  <c>Literal</c>
                  <c>9</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>160</c>
                  <c>Literal</c>
                  <c>2</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>161</c>
                  <c>Literal</c>
                  <c>12</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>162</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>3</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>163</c>
                  <c>Literal</c>
                  <c>11</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>164</c>
                  <c>Literal</c>
                  <c>14</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>165</c>
                  <c>Literal</c>
                  <c>11</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>166</c>
                  <c>Product</c>
                  <c />
                  <c>33</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>167</c>
                  <c>Literal</c>
                  <c>4</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>168</c>
                  <c>Literal</c>
                  <c>3</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>169</c>
                  <c>Literal</c>
                  <c>7</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>170</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>171</c>
                  <c>Greater Than</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>172</c>
                  <c>Literal</c>
                  <c>180</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>173</c>
                  <c>Literal</c>
                  <c>11581815</c>
                  <c />
                  <c />
                  <c />
                  <c>36</c>
                </r>
                <r>
                  <c>174</c>
                  <c>Literal</c>
                  <c>10900</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>175</c>
                  <c>Product</c>
                  <c />
                  <c>148</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>176</c>
                  <c>Literal</c>
                  <c>64</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>177</c>
                  <c>Equal</c>
                  <c />
                  <c>110</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>178</c>
                  <c>Sum</c>
                  <c />
                  <c>33</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>179</c>
                  <c>Literal</c>
                  <c>13</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>180</c>
                  <c>Literal</c>
                  <c>13</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>181</c>
                  <c>Literal</c>
                  <c>9</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>182</c>
                  <c>Sum</c>
                  <c />
                  <c>33</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>183</c>
                  <c>Literal</c>
                  <c>9</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>184</c>
                  <c>Literal</c>
                  <c>9</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>185</c>
                  <c>Literal</c>
                  <c>10</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>186</c>
                  <c>Min</c>
                  <c />
                  <c />
                  <c>5</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>187</c>
                  <c>Literal</c>
                  <c>49760548</c>
                  <c />
                  <c />
                  <c />
                  <c>41</c>
                </r>
                <r>
                  <c>188</c>
                  <c>Literal</c>
                  <c>327</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>189</c>
                  <c>Literal</c>
                  <c>11</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>190</c>
                  <c>Literal</c>
                  <c>938663</c>
                  <c />
                  <c />
                  <c />
                  <c>31</c>
                </r>
                <r>
                  <c>191</c>
                  <c>Literal</c>
                  <c>4219801928</c>
                  <c />
                  <c />
                  <c />
                  <c>46</c>
                </r>
                <r>
                  <c>192</c>
                  <c>Sum</c>
                  <c />
                  <c />
                  <c>5</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>193</c>
                  <c>Literal</c>
                  <c>10</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>194</c>
                  <c>Literal</c>
                  <c>990092</c>
                  <c />
                  <c />
                  <c />
                  <c>31</c>
                </r>
                <r>
                  <c>195</c>
                  <c>Literal</c>
                  <c>29509</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>196</c>
                  <c>Literal</c>
                  <c>220</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>197</c>
                  <c>Literal</c>
                  <c>146</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>198</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>199</c>
                  <c>Literal</c>
                  <c>45794652998</c>
                  <c />
                  <c />
                  <c />
                  <c>51</c>
                </r>
                <r>
                  <c>200</c>
                  <c>Equal</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>201</c>
                  <c>Literal</c>
                  <c>13</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>202</c>
                  <c>Literal</c>
                  <c>3396</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>203</c>
                  <c>Min</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>204</c>
                  <c>Literal</c>
                  <c>227938</c>
                  <c />
                  <c />
                  <c />
                  <c>31</c>
                </r>
                <r>
                  <c>205</c>
                  <c>Literal</c>
                  <c>9</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>206</c>
                  <c>Sum</c>
                  <c />
                  <c />
                  <c>4</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>207</c>
                  <c>Literal</c>
                  <c>106</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>208</c>
                  <c>Literal</c>
                  <c>8</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>209</c>
                  <c>Literal</c>
                  <c>3183</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>210</c>
                  <c>Literal</c>
                  <c>4</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>211</c>
                  <c>Max</c>
                  <c />
                  <c />
                  <c>3</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>212</c>
                  <c>Literal</c>
                  <c>3</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>213</c>
                  <c>Literal</c>
                  <c>163142063</c>
                  <c />
                  <c />
                  <c />
                  <c>41</c>
                </r>
                <r>
                  <c>214</c>
                  <c>Literal</c>
                  <c>6758201</c>
                  <c />
                  <c />
                  <c />
                  <c>36</c>
                </r>
                <r>
                  <c>215</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>216</c>
                  <c>Literal</c>
                  <c>370779393</c>
                  <c />
                  <c />
                  <c />
                  <c>46</c>
                </r>
                <r>
                  <c>217</c>
                  <c>Less Than</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>218</c>
                  <c>Sum</c>
                  <c />
                  <c />
                  <c>3</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>219</c>
                  <c>Literal</c>
                  <c>8</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>220</c>
                  <c>Literal</c>
                  <c>10</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>221</c>
                  <c>Literal</c>
                  <c>8</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>222</c>
                  <c>Sum</c>
                  <c />
                  <c>33</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>223</c>
                  <c>Literal</c>
                  <c>2</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>224</c>
                  <c>Literal</c>
                  <c>10</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>225</c>
                  <c>Literal</c>
                  <c>3</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>226</c>
                  <c>Max</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>227</c>
                  <c>Literal</c>
                  <c>10240</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>228</c>
                  <c>Literal</c>
                  <c>128</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>229</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>3</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>230</c>
                  <c>Literal</c>
                  <c>83</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>231</c>
                  <c>Literal</c>
                  <c>173</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>232</c>
                  <c>Literal</c>
                  <c>151</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>233</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>234</c>
                  <c>Literal</c>
                  <c>51</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>235</c>
                  <c>Less Than</c>
                  <c />
                  <c>102</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>236</c>
                  <c>Sum</c>
                  <c />
                  <c />
                  <c>3</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>237</c>
                  <c>Literal</c>
                  <c>10</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>238</c>
                  <c>Literal</c>
                  <c>6</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>239</c>
                  <c>Literal</c>
                  <c>7</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>240</c>
                  <c>Sum</c>
                  <c />
                  <c />
                  <c>3</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>241</c>
                  <c>Literal</c>
                  <c>14</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>242</c>
                  <c>Literal</c>
                  <c>15</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>243</c>
                  <c>Literal</c>
                  <c>14</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>244</c>
                  <c>Min</c>
                  <c />
                  <c>194</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>245</c>
                  <c>Literal</c>
                  <c>21796</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>246</c>
                  <c>Literal</c>
                  <c>6582785760613</c>
                  <c />
                  <c />
                  <c />
                  <c>61</c>
                </r>
                <r>
                  <c>247</c>
                  <c>Literal</c>
                  <c>886100718934</c>
                  <c />
                  <c />
                  <c />
                  <c>56</c>
                </r>
                <r>
                  <c>248</c>
                  <c>Literal</c>
                  <c>65280071549</c>
                  <c />
                  <c />
                  <c />
                  <c>51</c>
                </r>
                <r>
                  <c>249</c>
                  <c>Product</c>
                  <c />
                  <c>95</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>250</c>
                  <c>Literal</c>
                  <c>14581316</c>
                  <c />
                  <c />
                  <c />
                  <c>36</c>
                </r>
                <r>
                  <c>251</c>
                  <c>Greater Than</c>
                  <c />
                  <c>37</c>
                  <c />
                  <c>0</c>
                  <c>22</c>
                </r>
                <r>
                  <c>252</c>
                  <c>Literal</c>
                  <c>43005</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>253</c>
                  <c>Literal</c>
                  <c>2</c>
                  <c />
                  <c />
                  <c />
                  <c>11</c>
                </r>
                <r>
                  <c>254</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>255</c>
                  <c>Greater Than</c>
                  <c />
                  <c />
                  <c>2</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>256</c>
                  <c>Literal</c>
                  <c>26927</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>257</c>
                  <c>Literal</c>
                  <c>26927</c>
                  <c />
                  <c />
                  <c />
                  <c>26</c>
                </r>
                <r>
                  <c>258</c>
                  <c>Literal</c>
                  <c>1257</c>
                  <c />
                  <c />
                  <c />
                  <c>21</c>
                </r>
                <r>
                  <c>259</c>
                  <c>Product</c>
                  <c />
                  <c />
                  <c>5</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>260</c>
                  <c>Literal</c>
                  <c>216</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>261</c>
                  <c>Literal</c>
                  <c>229</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>262</c>
                  <c>Literal</c>
                  <c>67</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>263</c>
                  <c>Literal</c>
                  <c>161</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>264</c>
                  <c>Literal</c>
                  <c>247</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
                <r>
                  <c>265</c>
                  <c>Literal</c>
                  <c>109216835</c>
                  <c />
                  <c />
                  <c />
                  <c>41</c>
                </r>
                <r>
                  <c>266</c>
                  <c>Min</c>
                  <c />
                  <c />
                  <c>1</c>
                  <c>1</c>
                  <c>18</c>
                </r>
                <r>
                  <c>267</c>
                  <c>Literal</c>
                  <c>189</c>
                  <c />
                  <c />
                  <c />
                  <c>16</c>
                </r>
              </Data>
            </Configuration>
          </TextInput>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>I Input</DefaultAnnotationText>
          <Left value="True" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="LengthTypeID" source="TextInput:" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxMacroInput" />
    </Node>
    <Node ToolID="42">
      <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
        <Position x="198" y="133" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <OrderChanged value="False" />
          <CommaDecimal value="False" />
          <SelectFields>
            <SelectField field="EntryTextLen" selected="False" />
            <SelectField field="*Unknown" selected="True" />
          </SelectFields>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
            <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
            <Field name="LengthTypeID" source="TextInput:" type="Byte" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
    </Node>
    <Node ToolID="59">
      <GuiSettings Plugin="AlteryxBasePluginsGui.Sort.Sort">
        <Position x="1530" y="116" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <SortInfo locale="1033">
            <Field field="NodeID" order="Ascending" />
          </SortInfo>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText>NodeID - Ascending</DefaultAnnotationText>
          <Left value="False" />
        </Annotation>
        <MetaInfo connection="Output">
          <RecordInfo>
            <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="RootNode" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
            <Field name="NodeID" source="TextInput:" type="Int16" />
            <Field name="Op" size="12" source="TextInput:" type="V_String" />
            <Field name="LiteralValue" source="TextInput:" type="Int64" />
            <Field name="NodeLength" source="TextInput:" type="Byte" />
          </RecordInfo>
        </MetaInfo>
      </Properties>
      <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSort" />
    </Node>
    <Node ToolID="45">
      <GuiSettings Plugin="AlteryxGuiToolkit.ToolContainer.ToolContainer">
        <Position x="1613" y="53" width="703" height="178" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Caption>Process the operation - reducing the formula</Caption>
          <Style TextColor="#314c4a" FillColor="#ecf2f2" BorderColor="#314c4a" Transparency="25" Margin="25" />
          <Disabled value="False" />
          <Folded value="False" />
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
      <ChildNodes>
        <Node ToolID="37">
          <GuiSettings Plugin="AlteryxBasePluginsGui.AlteryxSelect.AlteryxSelect">
            <Position x="1638" y="103" />
          </GuiSettings>
          <Properties>
            <Configuration>
              <OrderChanged value="False" />
              <CommaDecimal value="False" />
              <SelectFields>
                <SelectField field="RootNode" selected="True" />
                <SelectField field="*Unknown" selected="False" />
              </SelectFields>
            </Configuration>
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
            <MetaInfo connection="Output">
              <RecordInfo>
                <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="RootNode" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
              </RecordInfo>
            </MetaInfo>
          </Properties>
          <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSelect" />
        </Node>
        <Node ToolID="38">
          <GuiSettings Plugin="AlteryxBasePluginsGui.Unique.Unique">
            <Position x="1734" y="102" />
          </GuiSettings>
          <Properties>
            <Configuration>
              <UniqueFields>
                <Field field="RootNode" />
              </UniqueFields>
            </Configuration>
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
            <MetaInfo connection="Unique">
              <RecordInfo>
                <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="RootNode" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
              </RecordInfo>
              <SortInfo>
                <Field field="RootNode" order="Asc" />
              </SortInfo>
            </MetaInfo>
            <MetaInfo connection="Duplicates">
              <RecordInfo>
                <Field description="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" name="RootNode" source="Formula: if [Op] !='Literal' and [Row+1:Op] = 'Literal' &#xA;//this is a an operator followed by a literal&#xA;    then [NodeID]&#xA;elseif [Op]='Literal'&#xA;    then [Row-1:PotentialCompress]&#xA;else null()&#xA;endif&#xA;" type="Int32" />
              </RecordInfo>
              <SortInfo>
                <Field field="RootNode" order="Asc" />
              </SortInfo>
            </MetaInfo>
          </Properties>
          <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxUnique" />
        </Node>
        <Node ToolID="39">
          <GuiSettings Plugin="AlteryxBasePluginsGui.Union.Union">
            <Position x="2022" y="116" />
          </GuiSettings>
          <Properties>
            <Configuration>
              <ByName_ErrorMode>Warning</ByName_ErrorMode>
              <ByName_OutputMode>All</ByName_OutputMode>
              <Mode>ByName</Mode>
              <SetOutputOrder value="True" />
              <OutputOrder>
                <Connection>#1</Connection>
                <Connection>#2</Connection>
              </OutputOrder>
            </Configuration>
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
            <MetaInfo connection="Output">
              <RecordInfo>
                <Field name="NodeLength" source="(Multiple Sources)" type="Int64" />
                <Field name="NodeID" source="TextInput: (Multiple Sources)" type="Int16" />
                <Field name="Op" size="12" source="(Multiple Sources)" type="V_String" />
                <Field name="LiteralValue" source="(Multiple Sources)" type="Int64" />
                <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
                <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
                <Field name="LengthTypeID" source="TextInput:" type="Byte" />
              </RecordInfo>
            </MetaInfo>
          </Properties>
          <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxUnion" />
        </Node>
        <Node ToolID="40">
          <GuiSettings Plugin="AlteryxBasePluginsGui.Sample.Sample">
            <Position x="2118" y="116" />
          </GuiSettings>
          <Properties>
            <Configuration>
              <Mode>First</Mode>
              <N>1</N>
              <GroupFields orderChanged="False">
                <Field name="NodeID" />
              </GroupFields>
            </Configuration>
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText>First 1</DefaultAnnotationText>
              <Left value="False" />
            </Annotation>
            <MetaInfo connection="Output">
              <RecordInfo>
                <Field name="NodeLength" source="(Multiple Sources)" type="Int64" />
                <Field name="NodeID" source="TextInput: (Multiple Sources)" type="Int16" />
                <Field name="Op" size="12" source="(Multiple Sources)" type="V_String" />
                <Field name="LiteralValue" source="(Multiple Sources)" type="Int64" />
                <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
                <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
                <Field name="LengthTypeID" source="TextInput:" type="Byte" />
              </RecordInfo>
              <SortInfo>
                <Field field="NodeID" order="Asc" />
              </SortInfo>
            </MetaInfo>
          </Properties>
          <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSample" />
        </Node>
        <Node ToolID="41">
          <GuiSettings Plugin="AlteryxBasePluginsGui.Filter.Filter">
            <Position x="2214" y="116" />
          </GuiSettings>
          <Properties>
            <Configuration>
              <Mode>Simple</Mode>
              <Simple>
                <Operator>IsNotNull</Operator>
                <Field>Op</Field>
                <Operands>
                  <IgnoreTimeInDateTime>True</IgnoreTimeInDateTime>
                  <DateType>fixed</DateType>
                  <PeriodDate>2021-12-22 14:11:23</PeriodDate>
                  <PeriodType>
                  </PeriodType>
                  <PeriodCount>0</PeriodCount>
                  <Operand>
                  </Operand>
                  <StartDate>2021-12-22 14:11:23</StartDate>
                  <EndDate>2021-12-22 14:11:23</EndDate>
                </Operands>
              </Simple>
            </Configuration>
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText>!IsNull([Op])</DefaultAnnotationText>
              <Left value="False" />
            </Annotation>
            <MetaInfo connection="True">
              <RecordInfo>
                <Field name="NodeLength" source="(Multiple Sources)" type="Int64" />
                <Field name="NodeID" source="TextInput: (Multiple Sources)" type="Int16" />
                <Field name="Op" size="12" source="(Multiple Sources)" type="V_String" />
                <Field name="LiteralValue" source="(Multiple Sources)" type="Int64" />
                <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
                <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
                <Field name="LengthTypeID" source="TextInput:" type="Byte" />
              </RecordInfo>
              <SortInfo>
                <Field field="NodeID" order="Asc" />
              </SortInfo>
            </MetaInfo>
            <MetaInfo connection="False">
              <RecordInfo>
                <Field name="NodeLength" source="(Multiple Sources)" type="Int64" />
                <Field name="NodeID" source="TextInput: (Multiple Sources)" type="Int16" />
                <Field name="Op" size="12" source="(Multiple Sources)" type="V_String" />
                <Field name="LiteralValue" source="(Multiple Sources)" type="Int64" />
                <Field name="SubPacketLenInt" source="TextInput:" type="Int16" />
                <Field name="SubPacketCountInt" source="TextInput:" type="Byte" />
                <Field name="LengthTypeID" source="TextInput:" type="Byte" />
              </RecordInfo>
              <SortInfo>
                <Field field="NodeID" order="Asc" />
              </SortInfo>
            </MetaInfo>
          </Properties>
          <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxFilter" />
        </Node>
        <Node ToolID="61">
          <GuiSettings Plugin="AlteryxBasePluginsGui.Sort.Sort">
            <Position x="1926" y="116" />
          </GuiSettings>
          <Properties>
            <Configuration>
              <SortInfo locale="1033">
                <Field field="NodeID" order="Ascending" />
              </SortInfo>
            </Configuration>
            <Annotation DisplayMode="0">
              <Name />
              <DefaultAnnotationText>NodeID - Ascending</DefaultAnnotationText>
              <Left value="False" />
            </Annotation>
            <MetaInfo connection="Output">
              <RecordInfo>
                <Field name="NodeLength" source="Summarize: Sum - NodeLength (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro)" type="Int64" />
                <Field name="NodeID" source="TextInput: (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro)" type="Int16" />
                <Field name="Op" size="7" source="Formula: 'Literal' (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro)" type="String" />
                <Field name="LiteralValue" source="DynamicReplace: (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro) (BatchMacro)" type="Int64" />
              </RecordInfo>
            </MetaInfo>
          </Properties>
          <EngineSettings EngineDll="AlteryxBasePluginsEngine.dll" EngineDllEntryPoint="AlteryxSort" />
        </Node>
        <Node ToolID="63">
          <GuiSettings>
            <Position x="1830" y="116" />
          </GuiSettings>
          <Properties>
            <Configuration>
              <Value name="BatchMacroGroupBy" />
              <Value name="Input.Input1"><![CDATA[RootNode=RootNode
NodeID=NodeID
Op=Op
LiteralValue=LiteralValue
NodeLength=NodeLength
]]></Value>
              <Value name="ControlParams"><![CDATA[Control Parameter (3)=RootNode
]]></Value>
            </Configuration>
            <Annotation DisplayMode="0">
              <Name>PerformOp (35)</Name>
              <DefaultAnnotationText />
              <Left value="False" />
            </Annotation>
          </Properties>
          <EngineSettings Macro=".\PerformOp.yxmc" />
        </Node>
      </ChildNodes>
    </Node>
  </Nodes>
  <Connections>
    <Connection>
      <Origin ToolID="5" Connection="Output" />
      <Destination ToolID="16" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="15" Connection="Output" />
      <Destination ToolID="19" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="16" Connection="Output" />
      <Destination ToolID="31" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="17" Connection="True" />
      <Destination ToolID="18" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="17" Connection="False" />
      <Destination ToolID="25" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="18" Connection="Output" />
      <Destination ToolID="15" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="19" Connection="True" />
      <Destination ToolID="20" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="19" Connection="True" />
      <Destination ToolID="21" Connection="Left" />
    </Connection>
    <Connection>
      <Origin ToolID="20" Connection="Output" />
      <Destination ToolID="21" Connection="Right" />
    </Connection>
    <Connection>
      <Origin ToolID="21" Connection="Join" />
      <Destination ToolID="22" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="22" Connection="True" />
      <Destination ToolID="32" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="24" Connection="Output" />
      <Destination ToolID="26" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="25" Connection="Output" />
      <Destination ToolID="24" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="26" Connection="True" />
      <Destination ToolID="27" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="26" Connection="True" />
      <Destination ToolID="28" Connection="Left" />
    </Connection>
    <Connection>
      <Origin ToolID="27" Connection="Output" />
      <Destination ToolID="28" Connection="Right" />
    </Connection>
    <Connection>
      <Origin ToolID="28" Connection="Join" />
      <Destination ToolID="29" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="29" Connection="True" />
      <Destination ToolID="33" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="31" Connection="True" />
      <Destination ToolID="17" Connection="Input" />
    </Connection>
    <Connection name="#1">
      <Origin ToolID="32" Connection="Output" />
      <Destination ToolID="34" Connection="Input" />
    </Connection>
    <Connection name="#2">
      <Origin ToolID="33" Connection="Output" />
      <Destination ToolID="34" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="34" Connection="Output" />
      <Destination ToolID="59" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="43" Connection="Output9" />
      <Destination ToolID="44" Connection="Targets" />
    </Connection>
    <Connection>
      <Origin ToolID="41" Connection="True" />
      <Destination ToolID="44" Connection="Source" />
    </Connection>
    <Connection>
      <Origin ToolID="44" Connection="Output" />
      <Destination ToolID="48" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="46" Connection="Output" />
      <Destination ToolID="50" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="48" Connection="True" />
      <Destination ToolID="49" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="49" Connection="Output" />
      <Destination ToolID="23" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="51" Connection="Output" />
      <Destination ToolID="42" Connection="Input" />
    </Connection>
    <Connection name="#2">
      <Origin ToolID="42" Connection="Output" />
      <Destination ToolID="39" Connection="Input" />
    </Connection>
    <Connection name="#1">
      <Origin ToolID="61" Connection="Output" />
      <Destination ToolID="39" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="42" Connection="Output" />
      <Destination ToolID="5" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="59" Connection="Output" />
      <Destination ToolID="63" Connection="Input1" />
    </Connection>
    <Connection>
      <Origin ToolID="38" Connection="Unique" />
      <Destination ToolID="63" Connection="Control" />
    </Connection>
    <Connection>
      <Origin ToolID="59" Connection="Output" />
      <Destination ToolID="37" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="37" Connection="Output" />
      <Destination ToolID="38" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="39" Connection="Output" />
      <Destination ToolID="40" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="40" Connection="Output" />
      <Destination ToolID="41" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="41" Connection="True" />
      <Destination ToolID="43" Connection="Input8" />
    </Connection>
    <Connection>
      <Origin ToolID="41" Connection="True" />
      <Destination ToolID="46" Connection="Input" />
    </Connection>
    <Connection>
      <Origin ToolID="63" Connection="OpOutput" />
      <Destination ToolID="61" Connection="Input" />
    </Connection>
  </Connections>
  <Properties>
    <Memory default="True" />
    <GlobalRecordLimit value="0" />
    <TempFiles default="True" />
    <Annotation on="True" includeToolName="False" />
    <ConvErrorLimit value="10" />
    <ConvErrorLimit_Stop value="False" />
    <CancelOnError value="False" />
    <DisableBrowse value="False" />
    <EnablePerformanceProfiling value="False" />
    <PredictiveToolsCodePage value="1252" />
    <DisableAllOutput value="False" />
    <ShowAllMacroMessages value="False" />
    <ShowConnectionStatusIsOn value="True" />
    <ShowConnectionStatusOnlyWhenRunning value="True" />
    <ZoomLevel value="0" />
    <LayoutType>Horizontal</LayoutType>
    <Constants>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Macro Output (23)</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Macro Output (50)</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
      <Constant>
        <Namespace>Question</Namespace>
        <Name>Macro Input (51)</Name>
        <Value />
        <IsNumeric value="False" />
      </Constant>
    </Constants>
    <MetaInfo>
      <NameIsFileName value="True" />
      <Name>FindEnds</Name>
      <Description />
      <RootToolName />
      <ToolVersion />
      <ToolInDb value="False" />
      <CategoryName />
      <SearchTags />
      <Author />
      <Company />
      <Copyright />
      <DescriptionLink actual="" displayed="" />
      <Example>
        <Description />
        <File />
      </Example>
      <WorkflowId value="5b9cd37d-8dad-4a53-80f4-70685c30db1d" />
      <Telemetry>
        <PreviousWorkflowId value="6361b365-8f98-4309-92e8-3a227be7c719" />
        <OriginWorkflowId value="4bd4bf2b-a6df-42d6-b175-25466a178412" />
      </Telemetry>
    </MetaInfo>
    <Events>
      <Enabled value="False" />
    </Events>
    <RuntimeProperties>
      <Actions />
      <Questions>
        <Question>
          <Type>Tab</Type>
          <Description>Questions</Description>
          <Name>Tab (47)</Name>
          <ToolId value="47" />
          <Questions>
            <Question>
              <Type>MacroOutput</Type>
              <Description />
              <Name>Macro Output (23)</Name>
              <ToolId value="23" />
            </Question>
            <Question>
              <Type>MacroOutput</Type>
              <Description>Macro Output (50)</Description>
              <Name>Macro Output (50)</Name>
              <ToolId value="50" />
            </Question>
            <Question>
              <Type>MacroInput</Type>
              <Description>Macro Input (51)</Description>
              <Name>Macro Input (51)</Name>
              <ToolId value="51" />
            </Question>
          </Questions>
        </Question>
      </Questions>
      <ModuleType>Macro</ModuleType>
      <MacroCustomHelp value="False" />
      <MacroDynamicOutputFields value="False" />
      <MacroImage></MacroImage>
      <MacroInputs />
      <MacroOutputs />
      <IterativeMacro>
        <Input>Inbound</Input>
        <Output>Rework</Output>
        <IterationLimit value="500" />
        <LimitBehavior>Error</LimitBehavior>
        <OutputMode>AllSame</OutputMode>
      </IterativeMacro>
      <Wiz_CustomHelp value="False" />
      <Wiz_CustomGraphic value="False" />
      <Wiz_ShowOutput value="True" />
      <Wiz_OpenOutputTools>
        <Tool ToolId="23" Selected="True" />
        <Tool ToolId="43" Selected="True" />
        <Tool ToolId="50" Selected="True" />
        <Tool ToolId="51" Selected="True" />
        <Tool ToolId="63" Selected="True" />
      </Wiz_OpenOutputTools>
      <Wiz_OutputMessage />
      <Wiz_NoOutputFilesMessage />
      <Wiz_ChainRunWizard />
    </RuntimeProperties>
  </Properties>
</AlteryxDocument>